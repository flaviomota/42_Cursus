1.	CONFIGURATION

1.1.	Installing sudo
	1.1.1	Login as root:
				$ su -

	1.1.2.	Install sudo
				$ apt-get update -y
				$ apt-get upgrade -y
				$ apt install sudo
	
	1.1.3.	Adding user in sudo group
				$ su -
				$ usermod -aG sudo your_username
	
	1.1.4.	Check if user is in sudo group
				$ getent group sudo
	
	1.1.5.	Give privilege as a su.
				Open sudoers file:
					$ sudo visudo

	1.1.6.	Add this line in file:
				your_username    ALL=(ALL) ALL

1.2.	Installing tools
	1.2.1.	Installing git
				$ apt-get update -y
				$ apt-get upgrade -y
				$ apt-get install git -y
	
	1.2.2.	Checking git version
				$ git --version

	1.2.3.	Installing wget (wget is a free and open source tool for downloading files from web repositories.)
				$ sudo apt-get install wget

	1.2.4.	Installing Vim
				$ sudo apt-get install vim

	1.2.5.	Installing Oh my zsh (because it is easier to use)
				$ sudo apt-get install zsh
				$ zsh --version
				$ sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
	
1.3. Installing SSH and configuring SSH service
	$ sudo apt-get update
	$ sudo apt install openssh-server

	1.3.1.	Check the SSH server status
		$ sudo systemctl status ssh
	
	1.3.2.	Restart the SSH service
		$ service ssh restart

	1.3.3.	Changing default port(22) to 4242
		$ sudo nano /etc/ssh/sshd_config
	
	1.3.4.	Edit the file change the line #Port22 to Port 4242
		Find this line:
			#Port 22
		
		Change it like this:
			Port 4242
	
	1.3.5.	Check if port settings got right
		$ sudo grep Port /etc/ssh/sshd_config
	
	1.3.6.	Restart the SSH service
		$ sudo service ssh restart

1.4.	Installing and configuringUFW (Uncomplicated Firewall)
	1.4.1.	Install UFW
		$ apt-get install ufw
	
	1.4.2.	Enable
		$ sudo ufw enable

	1.4.3.	Check the status
		$ sudo ufw status numbered

	1.4.4.	Configure the rules
		$ sudo ufw allow ssh

	1.4.5.	Configure the port rules
		$ sudo ufw allow 4242

	1.4.6.	Delete the new rule: (This is for when you defend)
		$ sudo ufw status numbered
		$ sudo ufw delete (that number, for example 5 or 6)

1.5.	Connecting SSH server
	1.5.1.	Add forward rule for VirtualBox
		1.	Go to VirtualBox-> Choose the VM->Select Settings
		2.	Choose “Network”-> “Adapter 1"->”Advanced”->”Port Forwarding”
	
	1.5.2.	Restart SSH server (go to the VM machine)
		$ sudo systemctl restart ssh

	1.5.3.	Check SSH status
		$ sudo service sshd status

	1.5.4.	From host side from iTerm2 or Terminal enter as shown below:
		$ ssh your_username@127.0.0.1 -p 4242

	1.5.5.	Quit the connection:
		$ exit

1.6.	Set password policy

This setting enforces how many classes, i.e upper-case, lower-case, and other characters, should be in a password, also the length of the password.
“To set up a strong password policy, you have to comply with the following requirements:
	• Your password must be at least 10 characters long. It must contain an uppercase letter and a number. Also, it must not contain more than 3 consecutive identical characters. 6 Born2beRoot

Your password has to expire every 30 days.
	• The minimum number of days allowed before the modification of a password will be set to 2.
	• The user has to receive a warning message 7 days before their password expires.
	• The password must not include the name of the user.
	• The following rule does not apply to the root password: The password must have at least 7 characters that are not part of the former password.
	• Of course, your root password has to comply with this policy.”

	1.6.1.	Installing password quality checking libary (libpam-pwquality):
		$ sudo apt-get install libpam-pwquality

	1.6.2.	Change the length
		$ sudo nano /etc/pam.d/common-password

	1.6.3.	Find the following line:
		password [success=2 default=ignore] pam_unix.so obscure sha512

		And add an extra word: minlen=10 at the end.

		password [success=2 default=ignore] pam_unix.so obscure sha512 minlen=10

		To set at least one upper-case letter in the password, add a word ‘ucredit=-1’ at the end of the following line.
	
	1.6.4.	Find this line:
		password    requisite         pam_pwquality.so retry=3

		Add these values (min lower-case 1 letter, min upper-case 1 letter, min digit 1, max same letter repetition 3, whether to check if the password contains the user name in some form (enabled if the value is not 0), the minimum number of characters that must be different from the old password=7, enforce_for_root: same policy for root users):

		password    requisite         pam_pwquality.so retry=3 lcredit =-1 ucredit=-1 dcredit=-1 maxrepeat=3 usercheck=0 difok=7 enforce_for_root

	1.6.5.	Password expiration:
		$ sudo nano /etc/login.defs

	1.6.6.	Find this part:
		PASS_MAX_DAYS 9999
		PASS_MIN_DAYS 0
		PASS_WARN_AGE 7

		Change it like this:(max 30 days, min number of days(2) allowed before the modification, receive a notification before expiration at least 7 days before)

		PASS_MAX_DAYS 30
		PASS_MIN_DAYS 2
		PASS_WARN_AGE 7
	
	1.6.7.	Reboot the change affects:
		$ sudo reboot

1.7.	Create group
	$ sudo groupadd user42
	$ sudo groupadd evaluating

	1.7.1.	Check if group created:
		$ getent group

1.8.	Create user and assign into group
	1.8.1.	Check the all local users:
		$ cut -d: -f1 /etc/passwd

	1.8.2.	Create the user
		$ sudo adduser new_username

	1.8.3.	Assign an user into “evaluating” group (This is for when you defend)
		$ sudo usermod -aG user42 your_username
		$ sudo usermod -aG evaluating your_new_username

	1.8.4.	Check if the user is in group
		$ getent group user42
		$ getent group evaluating

	1.8.5.	Check which groups user account belongs:
		$ groups

	1.8.6.	Check if password rules working in users:
		$ chage -l your_new_username

1.9.	Configuring sudoers group	
	1.9.1.	Go to file:
		$ sudo nano /etc/sudoers

	1.9.2.	Add following for authentication using sudo has to be limited to 3 attempts in the event of an incorrect password:
		Defaults     secure_path="..."
		Defaults     passwd_tries=3

	1.9.3.	For wrong password warning message, add:
		Defaults     badpass_message="Password is wrong, please try again!"

	1.9.4.	Each action log file has to be saved in the /var/log/sudo/ folder:
		Defaults	logfile="/var/log/sudo/sudo.log"
		Defaults	log_input,log_output

	1.9.5.	Require tty: (Why use tty? If some non-root code is exploited (a PHP script, for example), the requiretty option means that the exploit code won't be able to directly upgrade its privileges by running sudo.)
		Defaults        requiretty

	1.9.6.	For security reasons too, the paths that can be used by sudo must be restricted. Example : /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
		(It was already set there)
			Defaults   secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

1.10.	Change hostname
	1.10.1.	Check current hostname (This is for when you defend)
		$ hostnamectl

	1.10.2.	Change the hostname
		$ hostnamectl set-hostname new_hostname

	1.10.3.	Change /etc/hosts file
		$ sudo nano /etc/hosts

	1.10.4.	Change old_hostname with new_hostname:
		127.0.0.1       localhost
		127.0.0.1       new_hostname

	1.10.5.	Reboot and check the change
		$ sudo reboot

1.11.	Crontab CONFIGURATION

“A crontab file contains instructions for the cron(8) daemon in the following simplified manner: “run this command at this time on this date”

	1.11.1.	Place monitoring.sh in /usr/local/bin/

	1.11.2.	Add the rule that script would execute without sudo password:
		Open sudoers file:
			$ sudo visudo

		Add this line:
			your_username ALL=(ALL) NOPASSWD: /usr/local/bin/monitoring.sh

	1.11.3.	Reboot
		$ sudo reboot

	1.11.4. Execute the script as su:
		$ sudo /usr/local/bin/monitoring.sh

	1.11.5. Open crontab and add the rule:
		$ sudo crontab -u root -e

	1.11.6.	Add at end as follows: (*/10 means every 10 mins the script will show)
		*/10 * * * * /usr/local/bin/monitoring.sh

#Tips

	If you have this error when you reboot your VM, change the Display settings in your VirtualBox settings. See the solution here.
		$ drm:vmw_host_log *ERROR* Failed to send host log message.

